@model BookingViewModel
@{
    ViewData["Title"] = "Book Car";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
        <li class="breadcrumb-item"><a
                href="@Url.Action("CarDetails", "Home", new { id = Model.CarID })">@Model.CarName</a></li>
        <li class="breadcrumb-item active">Book Car</li>
    </ol>
</nav>

<div class="booking-container">
    <div class="car-summary-card">
        <div class="car-summary-header">
            <h4><i class="bi bi-car-front"></i> Car Details</h4>
        </div>
        <div class="car-summary-body">
            <div class="car-summary-image">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" alt="@Model.CarName">
                }
                else if (!string.IsNullOrEmpty(Model.ImagePath))
                {
                    <img src="@Url.Content("~/uploads/" + Model.ImagePath)" alt="@Model.CarName">
                }
                else
                {
                    <div class="placeholder">
                        <i class="bi bi-car-front"></i>
                        <p>No Image Available</p>
                    </div>
                }
            </div>

            <div class="car-summary-info">
                <h5>@Model.CarName</h5>
                <p>Model: @Model.CarModel</p>
            </div>

            <div class="car-price-highlight">
                <div class="price">$@Model.DailyRate.ToString("F2")</div>
                <small>per day</small>
            </div>
        </div>
    </div>

    <div class="booking-form-card">
        <div class="booking-form-header">
            <h4><i class="bi bi-calendar-check"></i> Booking Details</h4>
        </div>
        <div class="booking-form-body">
            <form asp-action="Book" method="post" class="booking-form">
                <input asp-for="CarID" type="hidden" />
                <input asp-for="CarName" type="hidden" />
                <input asp-for="CarModel" type="hidden" />
                <input asp-for="ImageUrl" type="hidden" />
                <input asp-for="ImagePath" type="hidden" />
                <input asp-for="DailyRate" type="hidden" />

                <div asp-validation-summary="ModelOnly" class="validation-summary"></div>

                <div class="form-group">
                    <label asp-for="PickupDate" class="form-label">
                        <i class="bi bi-calendar-event"></i>
                        Pickup Date
                    </label>
                    <div class="date-input-group">
                        <input asp-for="PickupDate" class="form-control" type="date"
                            min="@DateTime.Today.ToString("yyyy-MM-dd")" required />
                    </div>
                    <span asp-validation-for="PickupDate" class="validation-message"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ReturnDate" class="form-label">
                        <i class="bi bi-calendar-x"></i>
                        Return Date
                    </label>
                    <div class="date-input-group">
                        <input asp-for="ReturnDate" class="form-control" type="date"
                            min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" required />
                    </div>
                    <span asp-validation-for="ReturnDate" class="validation-message"></span>
                </div>

                <div class="booking-summary">
                    <h6><i class="bi bi-receipt"></i> Booking Summary</h6>
                    <div class="summary-row">
                        <div class="summary-label">Daily Rate:</div>
                        <div class="summary-value">$<span id="dailyRate">@Model.DailyRate.ToString("F2")</span></div>
                    </div>
                    <div class="summary-row">
                        <div class="summary-label">Number of Days:</div>
                        <div class="summary-value"><span id="numberOfDays">1</span></div>
                    </div>
                    <div class="summary-row">
                        <div class="summary-label">Total Cost:</div>
                        <div class="summary-value total-cost">$<span id="totalCost">@Model.DailyRate.ToString("F2")</span></div>
                    </div>
                </div>

                <div class="booking-actions">
                    <button type="submit" class="btn btn-confirm">
                        <i class="bi bi-check-circle"></i> Confirm Booking
                    </button>
                    <a href="@Url.Action("CarDetails", "Home", new { id = Model.CarID })" class="btn btn-back">
                        <i class="bi bi-arrow-left"></i> Back to Car Details
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function calculateTotal() {
            const pickupDate = new Date(document.getElementById('PickupDate').value);
            const returnDate = new Date(document.getElementById('ReturnDate').value);
            const dailyRate = parseFloat(@Model.DailyRate);

            if (pickupDate && returnDate && returnDate > pickupDate) {
                const timeDiff = returnDate.getTime() - pickupDate.getTime();
                const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
                const totalCost = daysDiff * dailyRate;

                document.getElementById('numberOfDays').textContent = daysDiff;
                document.getElementById('totalCost').textContent = totalCost.toFixed(2);
            } else {
                document.getElementById('numberOfDays').textContent = '1';
                document.getElementById('totalCost').textContent = dailyRate.toFixed(2);
            }
        }

        document.getElementById('PickupDate').addEventListener('change', calculateTotal);
        document.getElementById('ReturnDate').addEventListener('change', calculateTotal);

        // Set minimum return date when pickup date changes
        document.getElementById('PickupDate').addEventListener('change', function () {
            const pickupDate = new Date(this.value);
            const returnDateInput = document.getElementById('ReturnDate');
            const minReturnDate = new Date(pickupDate);
            minReturnDate.setDate(minReturnDate.getDate() + 1);
            returnDateInput.min = minReturnDate.toISOString().split('T')[0];

            // If current return date is before new minimum, update it
            if (new Date(returnDateInput.value) <= pickupDate) {
                returnDateInput.value = minReturnDate.toISOString().split('T')[0];
            }

            calculateTotal();
        });

        // Initial calculation
        calculateTotal();
    </script>
}